/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { NFTMarketplace, NFTMarketplaceInterface } from "../NFTMarketplace.js";

  const _abi = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ReentrancyGuardReentrantCall",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "nftContract",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "seller",
        "type": "address"
      }
    ],
    "name": "Cancelled",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "nftContract",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "seller",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "paymentToken",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      }
    ],
    "name": "Listed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "nftContract",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "seller",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "buyer",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      }
    ],
    "name": "Purchased",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "BASIS_POINTS",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "authorizedListers",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nftContract",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "buy",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nftContract",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "cancelListing",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nftContract",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getListing",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "seller",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "paymentToken",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          }
        ],
        "internalType": "struct NFTMarketplace.Listing",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nftContract",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "paymentToken",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      }
    ],
    "name": "list",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "nftContract",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "paymentToken",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      }
    ],
    "name": "listOwnedNFT",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "listings",
    "outputs": [
      {
        "internalType": "address",
        "name": "seller",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "paymentToken",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "isActive",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "marketplaceFee",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "name": "onERC721Received",
    "outputs": [
      {
        "internalType": "bytes4",
        "name": "",
        "type": "bytes4"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "lister",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "authorized",
        "type": "bool"
      }
    ],
    "name": "setAuthorizedLister",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_fee",
        "type": "uint256"
      }
    ],
    "name": "setMarketplaceFee",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "withdrawFees",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405260fa600455348015610014575f5ffd5b503360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361008d575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161008491906101a4565b60405180910390fd5b61009c816100a260201b60201c565b506101bd565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018e82610165565b9050919050565b61019e81610184565b82525050565b5f6020820190506101b75f830184610195565b92915050565b612917806101ca5f395ff3fe6080604052600436106100f1575f3560e01c80638da5cb5b11610089578063cce7ec1311610058578063cce7ec1314610308578063e1f1c4a714610324578063ea8cdb1f1461034e578063f2fde38b14610376576100f1565b80638da5cb5b146102665780639407ea9814610290578063a459cec3146102b8578063b2ddee06146102e0576100f1565b806353458b80116100c557806353458b80146101ae5780636a166964146101ea578063715018a61461021457806388700d1c1461022a576100f1565b806207df30146100f5578063150b7a021461013457806322d3af0b14610170578063476343ee14610198575b5f5ffd5b348015610100575f5ffd5b5061011b60048036038101906101169190611b85565b61039e565b60405161012b9493929190611bfb565b60405180910390f35b34801561013f575f5ffd5b5061015a60048036038101906101559190611d7a565b61041f565b6040516101679190611e34565b60405180910390f35b34801561017b575f5ffd5b5061019660048036038101906101919190611e4d565b610432565b005b3480156101a3575f5ffd5b506101ac61090c565b005b3480156101b9575f5ffd5b506101d460048036038101906101cf9190611eb1565b610a0d565b6040516101e19190611edc565b60405180910390f35b3480156101f5575f5ffd5b506101fe610a2a565b60405161020b9190611ef5565b60405180910390f35b34801561021f575f5ffd5b50610228610a30565b005b348015610235575f5ffd5b50610250600480360381019061024b9190611b85565b610a43565b60405161025d9190611f8e565b60405180910390f35b348015610271575f5ffd5b5061027a610b77565b6040516102879190611fa7565b60405180910390f35b34801561029b575f5ffd5b506102b660048036038101906102b19190611fc0565b610b9f565b005b3480156102c3575f5ffd5b506102de60048036038101906102d99190612015565b610bf6565b005b3480156102eb575f5ffd5b5061030660048036038101906103019190611b85565b610c56565b005b610322600480360381019061031d9190611b85565b610e7a565b005b34801561032f575f5ffd5b50610338611333565b6040516103459190611ef5565b60405180910390f35b348015610359575f5ffd5b50610374600480360381019061036f9190611e4d565b611339565b005b348015610381575f5ffd5b5061039c60048036038101906103979190611eb1565b611873565b005b6002602052815f5260405f20602052805f5260405f205f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015f9054906101000a900460ff16905084565b5f63150b7a0260e01b9050949350505050565b61043a6118f7565b5f811161047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610473906120ad565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e19061213b565b60405180910390fd5b6104f2610b77565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610571575060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b6105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a7906121a3565b60405180910390fd5b5f8490503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016106049190611ef5565b602060405180830381865afa15801561061f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061064391906121d5565b73ffffffffffffffffffffffffffffffffffffffff1614610699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106909061224a565b60405180910390fd5b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8581526020019081526020015f206003015f9054906101000a900460ff1615610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c906122b2565b60405180910390fd5b6040518060800160405280610748610b77565b73ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016001151581525060025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548160ff021916908315150217905550905050610896610b77565b73ffffffffffffffffffffffffffffffffffffffff16848673ffffffffffffffffffffffffffffffffffffffff167f462ae7fe8ebe6dca41694814c3bef6023e5166a98d66314d9bedef1a9e5a561a86866040516108f59291906122d0565b60405180910390a45061090661193b565b50505050565b610914611944565b5f4790505f811161095a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095190612341565b60405180910390fd5b5f610963610b77565b73ffffffffffffffffffffffffffffffffffffffff16826040516109869061238c565b5f6040518083038185875af1925050503d805f81146109c0576040519150601f19603f3d011682016040523d82523d5f602084013e6109c5565b606091505b5050905080610a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a00906123ea565b60405180910390fd5b5050565b6003602052805f5260405f205f915054906101000a900460ff1681565b60045481565b610a38611944565b610a415f6119cb565b565b610a4b611a95565b60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f206040518060800160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050905092915050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ba7611944565b612710811115610bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be390612452565b60405180910390fd5b8060048190555050565b610bfe611944565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b610c5e6118f7565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806003015f9054906101000a900460ff16610cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf4906124ba565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8490612522565b60405180910390fd5b5f816003015f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff166342842e0e3033856040518463ffffffff1660e01b8152600401610de593929190612540565b5f604051808303815f87803b158015610dfc575f5ffd5b505af1158015610e0e573d5f5f3e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff167f0c8fde439b4e72d175ffeb3c5f3c15c6f70f473413f4c2d68f8971c0d629b60d60405160405180910390a450610e7661193b565b5050565b610e826118f7565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f209050806003015f9054906101000a900460ff16610f21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f18906124ba565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff16816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610fb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa99061213b565b60405180910390fd5b5f610128461480610fc4575061012746145b90505f3490508115610fe4576402540be40034610fe191906125a2565b90505b826002015481101561102b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110229061262d565b60405180910390fd5b5f835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f846002015490505f856003015f6101000a81548160ff0219169083151502179055505f6127106004548361108691906125a2565b6110909190612678565b90505f818361109f91906126a8565b90508873ffffffffffffffffffffffffffffffffffffffff166342842e0e30338b6040518463ffffffff1660e01b81526004016110de93929190612540565b5f604051808303815f87803b1580156110f5575f5ffd5b505af1158015611107573d5f5f3e3d5ffd5b505050505f866111175781611129565b6402540be400826111289190612678565b5b90505f8573ffffffffffffffffffffffffffffffffffffffff16826040516111509061238c565b5f6040518083038185875af1925050503d805f811461118a576040519150601f19603f3d011682016040523d82523d5f602084013e61118f565b606091505b50509050806111d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ca90612725565b60405180910390fd5b848711156112b6575f85886111e891906126a8565b90505f896111f65781611208565b6402540be400826112079190612678565b5b90505f3373ffffffffffffffffffffffffffffffffffffffff168260405161122f9061238c565b5f6040518083038185875af1925050503d805f8114611269576040519150601f19603f3d011682016040523d82523d5f602084013e61126e565b606091505b50509050806112b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a99061278d565b60405180910390fd5b5050505b8573ffffffffffffffffffffffffffffffffffffffff168a8c73ffffffffffffffffffffffffffffffffffffffff167f29cca5ea4e05e676b056a41330565d9745f632f8ca66a53b38ecd41df37bf90c33896040516113169291906122d0565b60405180910390a450505050505050505061132f61193b565b5050565b61271081565b6113416118f7565b5f8111611383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137a906120ad565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146113f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e89061213b565b60405180910390fd5b5f8490503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016114459190611ef5565b602060405180830381865afa158015611460573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061148491906121d5565b73ffffffffffffffffffffffffffffffffffffffff16146114da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d1906127f5565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc866040518263ffffffff1660e01b815260040161152a9190611ef5565b602060405180830381865afa158015611545573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061156991906121d5565b73ffffffffffffffffffffffffffffffffffffffff16148061160157508073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b81526004016115c1929190612813565b602060405180830381865afa1580156115dc573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611600919061284e565b5b611640576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611637906128c3565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166342842e0e3330876040518463ffffffff1660e01b815260040161167d93929190612540565b5f604051808303815f87803b158015611694575f5ffd5b505af11580156116a6573d5f5f3e3d5ffd5b5050505060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020016001151581525060025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16848673ffffffffffffffffffffffffffffffffffffffff167f462ae7fe8ebe6dca41694814c3bef6023e5166a98d66314d9bedef1a9e5a561a868660405161185c9291906122d0565b60405180910390a45061186d61193b565b50505050565b61187b611944565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036118eb575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118e29190611fa7565b60405180910390fd5b6118f4816119cb565b50565b60025f5403611932576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b60015f81905550565b61194c611a8e565b73ffffffffffffffffffffffffffffffffffffffff1661196a610b77565b73ffffffffffffffffffffffffffffffffffffffff16146119c95761198d611a8e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016119c09190611fa7565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b60405180608001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b2182611af8565b9050919050565b611b3181611b17565b8114611b3b575f5ffd5b50565b5f81359050611b4c81611b28565b92915050565b5f819050919050565b611b6481611b52565b8114611b6e575f5ffd5b50565b5f81359050611b7f81611b5b565b92915050565b5f5f60408385031215611b9b57611b9a611af0565b5b5f611ba885828601611b3e565b9250506020611bb985828601611b71565b9150509250929050565b611bcc81611b17565b82525050565b611bdb81611b52565b82525050565b5f8115159050919050565b611bf581611be1565b82525050565b5f608082019050611c0e5f830187611bc3565b611c1b6020830186611bc3565b611c286040830185611bd2565b611c356060830184611bec565b95945050505050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611c8c82611c46565b810181811067ffffffffffffffff82111715611cab57611caa611c56565b5b80604052505050565b5f611cbd611ae7565b9050611cc98282611c83565b919050565b5f67ffffffffffffffff821115611ce857611ce7611c56565b5b611cf182611c46565b9050602081019050919050565b828183375f83830152505050565b5f611d1e611d1984611cce565b611cb4565b905082815260208101848484011115611d3a57611d39611c42565b5b611d45848285611cfe565b509392505050565b5f82601f830112611d6157611d60611c3e565b5b8135611d71848260208601611d0c565b91505092915050565b5f5f5f5f60808587031215611d9257611d91611af0565b5b5f611d9f87828801611b3e565b9450506020611db087828801611b3e565b9350506040611dc187828801611b71565b925050606085013567ffffffffffffffff811115611de257611de1611af4565b5b611dee87828801611d4d565b91505092959194509250565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e2e81611dfa565b82525050565b5f602082019050611e475f830184611e25565b92915050565b5f5f5f5f60808587031215611e6557611e64611af0565b5b5f611e7287828801611b3e565b9450506020611e8387828801611b71565b9350506040611e9487828801611b3e565b9250506060611ea587828801611b71565b91505092959194509250565b5f60208284031215611ec657611ec5611af0565b5b5f611ed384828501611b3e565b91505092915050565b5f602082019050611eef5f830184611bec565b92915050565b5f602082019050611f085f830184611bd2565b92915050565b611f1781611b17565b82525050565b611f2681611b52565b82525050565b611f3581611be1565b82525050565b608082015f820151611f4f5f850182611f0e565b506020820151611f626020850182611f0e565b506040820151611f756040850182611f1d565b506060820151611f886060850182611f2c565b50505050565b5f608082019050611fa15f830184611f3b565b92915050565b5f602082019050611fba5f830184611bc3565b92915050565b5f60208284031215611fd557611fd4611af0565b5b5f611fe284828501611b71565b91505092915050565b611ff481611be1565b8114611ffe575f5ffd5b50565b5f8135905061200f81611feb565b92915050565b5f5f6040838503121561202b5761202a611af0565b5b5f61203885828601611b3e565b925050602061204985828601612001565b9150509250929050565b5f82825260208201905092915050565b7f5072696365206d7573742062652067726561746572207468616e2030000000005f82015250565b5f612097601c83612053565b91506120a282612063565b602082019050919050565b5f6020820190508181035f8301526120c48161208b565b9050919050565b7f4f6e6c79206e617469766520455448207061796d656e747320737570706f72745f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f612125602283612053565b9150612130826120cb565b604082019050919050565b5f6020820190508181035f83015261215281612119565b9050919050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f61218d600e83612053565b915061219882612159565b602082019050919050565b5f6020820190508181035f8301526121ba81612181565b9050919050565b5f815190506121cf81611b28565b92915050565b5f602082840312156121ea576121e9611af0565b5b5f6121f7848285016121c1565b91505092915050565b7f4e4654206e6f74206f776e6564206279206d61726b6574706c616365000000005f82015250565b5f612234601c83612053565b915061223f82612200565b602082019050919050565b5f6020820190508181035f83015261226181612228565b9050919050565b7f416c7265616479206c69737465640000000000000000000000000000000000005f82015250565b5f61229c600e83612053565b91506122a782612268565b602082019050919050565b5f6020820190508181035f8301526122c981612290565b9050919050565b5f6040820190506122e35f830185611bc3565b6122f06020830184611bd2565b9392505050565b7f4e6f206665657320746f207769746864726177000000000000000000000000005f82015250565b5f61232b601383612053565b9150612336826122f7565b602082019050919050565b5f6020820190508181035f8301526123588161231f565b9050919050565b5f81905092915050565b50565b5f6123775f8361235f565b915061238282612369565b5f82019050919050565b5f6123968261236c565b9150819050919050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f6123d4601183612053565b91506123df826123a0565b602082019050919050565b5f6020820190508181035f830152612401816123c8565b9050919050565b7f4665652063616e6e6f74206578636565642031303025000000000000000000005f82015250565b5f61243c601683612053565b915061244782612408565b602082019050919050565b5f6020820190508181035f83015261246981612430565b9050919050565b7f4c697374696e67206e6f742061637469766500000000000000000000000000005f82015250565b5f6124a4601283612053565b91506124af82612470565b602082019050919050565b5f6020820190508181035f8301526124d181612498565b9050919050565b7f4e6f74207468652073656c6c65720000000000000000000000000000000000005f82015250565b5f61250c600e83612053565b9150612517826124d8565b602082019050919050565b5f6020820190508181035f83015261253981612500565b9050919050565b5f6060820190506125535f830186611bc3565b6125606020830185611bc3565b61256d6040830184611bd2565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125ac82611b52565b91506125b783611b52565b92508282026125c581611b52565b915082820484148315176125dc576125db612575565b5b5092915050565b7f496e73756666696369656e74207061796d656e740000000000000000000000005f82015250565b5f612617601483612053565b9150612622826125e3565b602082019050919050565b5f6020820190508181035f8301526126448161260b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61268282611b52565b915061268d83611b52565b92508261269d5761269c61264b565b5b828204905092915050565b5f6126b282611b52565b91506126bd83611b52565b92508282039050818111156126d5576126d4612575565b5b92915050565b7f5061796d656e7420746f2073656c6c6572206661696c656400000000000000005f82015250565b5f61270f601883612053565b915061271a826126db565b602082019050919050565b5f6020820190508181035f83015261273c81612703565b9050919050565b7f526566756e64206661696c6564000000000000000000000000000000000000005f82015250565b5f612777600d83612053565b915061278282612743565b602082019050919050565b5f6020820190508181035f8301526127a48161276b565b9050919050565b7f4e6f7420746865206f776e6572000000000000000000000000000000000000005f82015250565b5f6127df600d83612053565b91506127ea826127ab565b602082019050919050565b5f6020820190508181035f83015261280c816127d3565b9050919050565b5f6040820190506128265f830185611bc3565b6128336020830184611bc3565b9392505050565b5f8151905061284881611feb565b92915050565b5f6020828403121561286357612862611af0565b5b5f6128708482850161283a565b91505092915050565b7f4d61726b6574706c616365206e6f7420617070726f76656400000000000000005f82015250565b5f6128ad601883612053565b91506128b882612879565b602082019050919050565b5f6020820190508181035f8301526128da816128a1565b905091905056fea2646970667358221220410f93d604798e45d774344a057bce0bb4c45ff742ebed2ff0dd8c4f7bd7c3db64736f6c634300081c0033";

  
      type NFTMarketplaceConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: NFTMarketplaceConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class NFTMarketplace__factory extends ContractFactory {
    
      constructor(...args: NFTMarketplaceConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<NFTMarketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): NFTMarketplace__factory {
      return super.connect(runner) as NFTMarketplace__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): NFTMarketplaceInterface {
      return new Interface(_abi) as NFTMarketplaceInterface;
    }
    
    override attach(address: string | Addressable): NFTMarketplace {
      return super.attach(address) as NFTMarketplace;
    }
  static connect(address: string, runner?: ContractRunner | null): NFTMarketplace {
      return new Contract(address, _abi, runner) as unknown as NFTMarketplace;
    }
  }

  
  
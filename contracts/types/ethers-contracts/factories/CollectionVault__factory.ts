/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { CollectionVault, CollectionVaultInterface } from "../CollectionVault.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_nftCollection",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "YieldDeposited",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "YieldDistributed",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "claimYield",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "deposit",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "depositYield",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "distributeYield",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "getYieldBalance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "nftCollection",
    "outputs": [
      {
        "internalType": "contract NFTCollection",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "ownerOf",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalDeposits",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalYield",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "yieldBalance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405234801561000f575f5ffd5b50604051610d3b380380610d3b833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b610c2f8061010c5f395ff3fe608060405260043610610090575f3560e01c80636588103b116100585780636588103b146101565780637d882097146101805780638a570a12146101aa578063b6b55f25146101c0578063c5710a82146101e857610090565b8063014182051461009457806325285f01146100be578063406cf229146100fa57806347046891146101105780636352211e1461011a575b5f5ffd5b34801561009f575f5ffd5b506100a8610224565b6040516100b591906107e3565b60405180910390f35b3480156100c9575f5ffd5b506100e460048036038101906100df919061085a565b61022a565b6040516100f191906107e3565b60405180910390f35b348015610105575f5ffd5b5061010e610270565b005b61011861037c565b005b348015610125575f5ffd5b50610140600480360381019061013b91906108af565b61040f565b60405161014d91906108e9565b60405180910390f35b348015610161575f5ffd5b5061016a6104af565b604051610177919061095d565b60405180910390f35b34801561018b575f5ffd5b506101946104d3565b6040516101a191906107e3565b60405180910390f35b3480156101b5575f5ffd5b506101be6104dc565b005b3480156101cb575f5ffd5b506101e660048036038101906101e191906108af565b610722565b005b3480156101f3575f5ffd5b5061020e6004803603810190610209919061085a565b6107b6565b60405161021b91906107e3565b60405180910390f35b60025481565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116102f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ea906109d0565b60405180910390fd5b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610378573d5f5f3e3d5ffd5b5050565b5f34116103be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b590610a38565b60405180910390fd5b3460025f8282546103cf9190610a83565b925050819055507f6efedac2f5ab810f0507b22f5e395fa2d33dec417590d47b2b677e13ecdb06193460405161040591906107e3565b60405180910390a1565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161046991906107e3565b602060405180830381865afa158015610484573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a89190610aca565b9050919050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610546573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061056a9190610b09565b90505f81116105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590610b7e565b60405180910390fd5b5f5f90505b81811015610717575f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161061591906107e3565b602060405180830381865afa158015610630573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106549190610aca565b90505f836002546106659190610bc9565b90508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106b39190610a83565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f9d315883dbfe38532083c1e42c0d10fbf89ad1cabaa0c269f78b3beb892c101d8260405161070091906107e3565b60405180910390a2505080806001019150506105b3565b505f60028190555050565b5f8111610764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075b90610a38565b60405180910390fd5b8060025f8282546107759190610a83565b925050819055507f6efedac2f5ab810f0507b22f5e395fa2d33dec417590d47b2b677e13ecdb0619816040516107ab91906107e3565b60405180910390a150565b6001602052805f5260405f205f915090505481565b5f819050919050565b6107dd816107cb565b82525050565b5f6020820190506107f65f8301846107d4565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61082982610800565b9050919050565b6108398161081f565b8114610843575f5ffd5b50565b5f8135905061085481610830565b92915050565b5f6020828403121561086f5761086e6107fc565b5b5f61087c84828501610846565b91505092915050565b61088e816107cb565b8114610898575f5ffd5b50565b5f813590506108a981610885565b92915050565b5f602082840312156108c4576108c36107fc565b5b5f6108d18482850161089b565b91505092915050565b6108e38161081f565b82525050565b5f6020820190506108fc5f8301846108da565b92915050565b5f819050919050565b5f61092561092061091b84610800565b610902565b610800565b9050919050565b5f6109368261090b565b9050919050565b5f6109478261092c565b9050919050565b6109578161093d565b82525050565b5f6020820190506109705f83018461094e565b92915050565b5f82825260208201905092915050565b7f4e6f207969656c6420746f20636c61696d0000000000000000000000000000005f82015250565b5f6109ba601183610976565b91506109c582610986565b602082019050919050565b5f6020820190508181035f8301526109e7816109ae565b9050919050565b7f4d757374206465706f736974206120706f73697469766520616d6f756e7400005f82015250565b5f610a22601e83610976565b9150610a2d826109ee565b602082019050919050565b5f6020820190508181035f830152610a4f81610a16565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a8d826107cb565b9150610a98836107cb565b9250828201905080821115610ab057610aaf610a56565b5b92915050565b5f81519050610ac481610830565b92915050565b5f60208284031215610adf57610ade6107fc565b5b5f610aec84828501610ab6565b91505092915050565b5f81519050610b0381610885565b92915050565b5f60208284031215610b1e57610b1d6107fc565b5b5f610b2b84828501610af5565b91505092915050565b7f4e6f204e46547320696e20636f6c6c656374696f6e00000000000000000000005f82015250565b5f610b68601583610976565b9150610b7382610b34565b602082019050919050565b5f6020820190508181035f830152610b9581610b5c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610bd3826107cb565b9150610bde836107cb565b925082610bee57610bed610b9c565b5b82820490509291505056fea26469706673582212202205466557ab18c606f736f5fc0cab9897b56719efe094ba7361ba289d84284c64736f6c634300081c0033";

  
      type CollectionVaultConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: CollectionVaultConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class CollectionVault__factory extends ContractFactory {
    
      constructor(...args: CollectionVaultConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_nftCollection: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_nftCollection, overrides || {});
    };
    override deploy(_nftCollection: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_nftCollection, overrides || {}) as Promise<CollectionVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): CollectionVault__factory {
      return super.connect(runner) as CollectionVault__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): CollectionVaultInterface {
      return new Interface(_abi) as CollectionVaultInterface;
    }
    
    override attach(address: string | Addressable): CollectionVault {
      return super.attach(address) as CollectionVault;
    }
  static connect(address: string, runner?: ContractRunner | null): CollectionVault {
      return new Contract(address, _abi, runner) as unknown as CollectionVault;
    }
  }

  
  